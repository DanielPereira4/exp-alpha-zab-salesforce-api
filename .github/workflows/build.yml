name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8

    - name: Configure Maven settings for Anypoint
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings>
          <servers>
            <server>
              <id>anypoint-exchange-v3</id>
              <username>${{ secrets.ANYPOINT_PLATFORM_USERNAME }}</username>
              <password>${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}</password>
            </server>
          </servers>
        </settings>
        EOF

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Stamp artifact with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(echo "$artifactName1" | sed "s/.jar/-$commitHash.jar/")
        mv "$artifactName1" "$artifactName2"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Configure Maven settings for Anypoint
      run: |
        mkdir -p ~/.m2
        cat > ~/.m2/settings.xml <<EOF
        <settings>
          <servers>
            <server>
              <id>anypoint-exchange-v3</id>
              <username>${{ secrets.ANYPOINT_PLATFORM_USERNAME }}</username>
              <password>${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}</password>
            </server>
          </servers>
        </settings>
        EOF

    - uses: actions/download-artifact@v4
      with:
        name: artifacts

    - name: Deploy to CloudHub Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }}
        PASSWORD: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn org.mule.tools.maven:mule-maven-plugin:4.3.0:deploy \
          -Dmule.artifact="$artifactName" \
          -Danypoint.username="$USERNAME" \
          -Danypoint.password="$PASSWORD"
